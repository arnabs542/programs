https://www.geeksforgeeks.org/greedy-algorithms/

# Minimum Spanning Tree:
  -> What is Minimum Spanning Tree?
     Given a connected and undirected graph, a spanning tree of that graph is a subgraph that is a tree and connects all
     the vertices together. A single graph can have many different spanning trees. A minimum spanning tree (MST) or
     minimum weight spanning tree for a weighted, connected and undirected graph is a spanning tree with weight less
     than or equal to the weight of every other spanning tree.
  -> Kruskal's MST: https://www.geeksforgeeks.org/kruskals-minimum-spanning-tree-algorithm-greedy-algo-2/
     - Uses Disjoint Sets

# Compression Techniques: https://www.geeksforgeeks.org/difference-between-lossy-compression-and-lossless-compression/
  -> Lossless compression is a class of data compression algorithms that allows the original data to be perfectly
     reconstructed from the compressed data. This is typically required for text and data files, such as bank records and text articles.
     eg. Runlength Encoding, Huffman Coding, LZW compression etc.
  -> Lossy compression by contrast, permits reconstruction only of an approximation of the original data. Its most
     commonly used to compress multimedia data (audio, video, and images), especially in applications such as streaming media and internet telephony.
     eg. DCT - Discreet Cosine Transform (Lossy) algo is used for this.

# Huffman Code (Lossless):
  -> The algorithm derives this table from the estimated probability or frequency of occurrence (weight) for each possible value of the source symbol. As in other entropy encoding methods, more common symbols are generally represented using fewer bits than less common symbols.
  -> https://www.geeksforgeeks.org/huffman-coding-using-priority-queue/
  -> https://www.geeksforgeeks.org/huffman-coding-greedy-algo-3/
  -> If input is sorted, we can do a 2 Queue approach to reduce runtime from O(nlogn) to O(n) : https://www.geeksforgeeks.org/efficient-huffman-coding-for-sorted-input-greedy-algo-4/

# LZW (Lossless): https://www.geeksforgeeks.org/lzw-lempel-ziv-welch-compression-technique/

# Travelling Salesman Problem: https://www.geeksforgeeks.org/travelling-salesman-problem-set-1/
  -> NP Complete Problem, no known Polynomial time algo. Best we can do is approximation algos.
  -> "Given a set of cities and distance between every pair of cities, the problem is to find the shortest possible route that visits every city exactly once and returns back to the starting point."
  -> Note the difference between Hamiltonian Cycle and TSP. The Hamiltoninan cycle problem is to find if there exist a tour that visits every city exactly once. Here we know that Hamiltonian Tour exists (because the graph is complete) and in fact many such tours exist, the problem is to find a minimum weight Hamiltonian Cycle.
  -> Using Backtracking: https://www.geeksforgeeks.org/travelling-salesman-problem-implementation-using-backtracking/
  -> Using DP: https://www.geeksforgeeks.org/travelling-salesman-problem-set-1/
  -> Using MST: https://www.geeksforgeeks.org/travelling-salesman-problem-set-2-approximate-using-mst/
